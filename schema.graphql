type UpdatedTokenInformation @entity(immutable: true) {
  id: Bytes!
  newName: String! # string
  newSymbol: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Upgrade @entity(immutable: true) {
  id: Bytes!
  _from: Bytes! # address
  _to: Bytes! # address
  _value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpgradeAgentSet @entity(immutable: true) {
  id: Bytes!
  agent: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Mint @entity(immutable: true) {
  id: Bytes!
  to: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MintFinished @entity(immutable: true) {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Holder @entity {
  id: ID!
  balance: BigInt!
  lastUpdated: BigInt!
}

type DailySale @entity {
  id: ID! 
  totalSales: BigInt! 
  numberOfSales: Int! 
}

type Watchlist @entity {
  id: ID!
  transactions: [String!]! 
  blockTimestamps: [BigInt!]!
  totalValue: BigInt! 
}
